name: ESLint Code Analysis

on: [push, pull_request]

jobs:
  eslint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # ✅ Optional: remove old corrupted node_modules
      - name: Remove node_modules (clean up any broken binaries)
        run: rm -rf node_modules

      # ❌ TEMP: Disable caching to avoid corrupted ESLint binaries
      # - name: Cache Node.js modules
      #   uses: actions/cache@v4
      #   with:
      #     path: node_modules
      #     key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: ${{ runner.os }}-node-modules

      - name: Install Node.js dependencies
        run: npm install

      - name: Create reports directory
        run: mkdir -p reports

      - name: Install ESLint SARIF Formatter
        run: npm install @microsoft/eslint-formatter-sarif --save-dev

      - name: Run ESLint with SARIF output
        run: |
          npx eslint . \
            --ext .js,.mjs,.cjs,.jsx \
            --format=@microsoft/eslint-formatter-sarif \
            --output-file=reports/eslint-results.sarif || true

      - name: Debug ESLint Output
        run: cat reports/eslint-results.sarif || echo "No SARIF report generated"

      - name: Upload SARIF report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: reports/eslint-results.sarif
